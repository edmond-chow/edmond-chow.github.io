/*
 *   MIT License
 *   
 *   Copyright (c) 2023 Edmond Chow
 *   
 *   Permission is hereby granted, free of charge, to any person obtaining a copy
 *   of this software and associated documentation files (the "Software"), to deal
 *   in the Software without restriction, including without limitation the rights
 *   to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 *   copies of the Software, and to permit persons to whom the Software is
 *   furnished to do so, subject to the following conditions:
 *   
 *   The above copyright notice and this permission notice shall be included in all
 *   copies or substantial portions of the Software.
 *   
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 *   SOFTWARE.
 */
@charset 'UTF-8';
@import url('font/font.css');
@layer basis {
	@layer initializer {
		/* default */
		::selection {
			color: white;
			background-color: #5F2BDE;
		}
		:focus-visible {
			outline: 2px solid blanchedalmond;
			outline-offset: 0px;
		}
		:before, :after {
			vertical-align: middle;
			text-align: center;
			overflow-wrap: anywhere;
			word-break: normal;
			text-decoration: none;
			overflow: visible;
			position: static;
			display: inline;
			margin: 0px;
			border: 0px;
			padding: 0px;
		}
		style, link, script, meta {
			display: none;
		}
		[hidden] {
			display: none;
		}
		@supports (text-size-adjust: 100%) {
			:is(html, body):not(.disabled-default-initializer) {
				text-size-adjust: 100%; /* Prevent font scaling in landscape while allowing user zoom */
			}
		}
		:is(html, body):not(.disabled-default-initializer) {
			vertical-align: top;
			text-align: left;
			overflow-wrap: anywhere;
			word-break: normal;
			text-decoration: none;
			overflow: visible;
			position: static;
			display: block;
			margin: 0px;
			border: 0px;
			padding: 0px;
			width: 100%;
			height: 100%;
			line-height: 17px;
			font-size: 16px;
			font-family: 'Noto Sans', 'Microsoft JhengHei';
			font-weight: normal;
			font-style: normal;
			color: black;
			letter-spacing: 0px;
		}
		body :not(.disabled-default-initializer):not(style, link, script, meta):not([hidden]) {
			vertical-align: top;
			text-align: left;
			overflow-wrap: anywhere;
			word-break: normal;
			text-decoration: none;
			overflow: visible;
			position: static;
			display: block;
			margin: 0px;
			border: 0px;
			padding: 0px;
			width: auto;
			height: auto;
		}
		:is(h1, h2, h3, h4, h5, h6, p, pre, code, samp, kbd, a, b, strong, em, var, s, sub, sup, span):not(.disabled-default-initializer) {
			vertical-align: baseline;
			text-align: inherit;
			overflow-wrap: inherit;
			word-break: inherit;
			text-decoration: inherit;
			display: inline-block;
			margin: 0px;
			border: 0px;
			padding: 0px;
			line-height: inherit;
			font-size: inherit;
			font-family: inherit;
			font-weight: inherit;
			font-style: inherit;
			color: inherit;
		}
		:is(b, strong, em, var, s, sub, sup, span):not(.disabled-default-initializer) {
			display: inline;
		}
		h1:not(.disabled-default-initializer) { line-height: 38px; font-size: 32px   ; font-weight: 500; }
		h2:not(.disabled-default-initializer) { line-height: 29px; font-size: 24px   ; font-weight: 500; }
		h3:not(.disabled-default-initializer) { line-height: 23px; font-size: 18.72px; font-weight: 500; }
		h4:not(.disabled-default-initializer) { line-height: 19px; font-size: 16px   ; font-weight: 500; }
		h5:not(.disabled-default-initializer) { line-height: 17px; font-size: 13.28px; font-weight: 500; }
		h6:not(.disabled-default-initializer) { line-height: 13px; font-size: 10.72px; font-weight: 500; }
		p:not(.disabled-default-initializer)  { line-height: 18px; font-size: 16px; font-weight: normal; font-family: 'Noto Sans', 'Microsoft JhengHei'; }
		pre:not(.disabled-default-initializer)  { line-height: 15px; font-size: 13px; font-weight: normal; font-family: 'Menlo', 'consolas', 'monospace'; }
		code:not(.disabled-default-initializer) { line-height: 15px; font-size: 13px; font-weight: normal; font-family: 'Menlo', 'consolas', 'monospace'; }
		samp:not(.disabled-default-initializer) { line-height: 15px; font-size: 13px; font-weight: normal; font-family: 'Menlo', 'consolas', 'monospace'; }
		kbd:not(.disabled-default-initializer)  { line-height: 15px; font-size: 13px; font-weight: normal; font-family: 'Menlo', 'consolas', 'monospace'; }
		a:not(.disabled-default-initializer) { text-decoration: underline; display: inline; }
		:is(b, strong):not(.disabled-default-initializer) { font-weight: bold; }
		:is(em, var):not(.disabled-default-initializer) { font-style: italic; }
		s:not(.disabled-default-initializer) { text-decoration: line-through; }
		sub:not(.disabled-default-initializer) { vertical-align: sub  ; font-size: smaller; }
		sup:not(.disabled-default-initializer) { vertical-align: super; font-size: smaller; }
		span:not(.disabled-default-initializer) { cursor: text; }
		button:not(.disabled-default-initializer) {
			font-family: 'Noto Sans', 'Microsoft JhengHei';
		}
		table:not(.disabled-default-initializer) {
			border-collapse: collapse;
		}
		:is(img, video, iframe):not(.disabled-default-initializer) {
			aspect-ratio: auto 16 / 9;
		}
		:is(h1, h2, h3, h4, h5, h6, p, pre):not(.disabled-default-initializer) {
			color: black;
		}
		a:not(.disabled-default-initializer) {
			font-size: 16px;
			line-height: 22px;
		}
		h4:not(.disabled-default-initializer) {
			font-size: 16px;
			line-height: 21px;
		}
		p:not(.disabled-default-initializer) {
			font-size: 16px;
			line-height: 21px;
		}
		pre:not(.disabled-default-initializer) {
			font-size: 13.5px;
			line-height: 18px;
		}
		/* mobile-sizing */
		@media (pointer:none), (pointer:coarse) {
			body {
				min-height: var(--window-inner-height, auto);
				min-width: 1048px;
			}
			@media only screen and (918px <= width < 1048px) and (orientation: portrait) {
				body {
					min-width: 918px;
				}
			}
			@media only screen and (width < 918px) and (orientation: portrait) {
				body {
					min-width: 570px;
				}
			}
		}
	}
	@layer scrollable {
		/* ::-webkit-scrollbar */
		@supports selector(::-webkit-scrollbar) {
			::-webkit-scrollbar {
				width: 14px;
				height: 14px;
			}
			::-webkit-scrollbar-track, ::-webkit-scrollbar-corner {
				background-color: transparent;
			}
			body::-webkit-scrollbar-track, body::-webkit-scrollbar-corner {
				background-color: #f1f1f1;
			}
			body.blur top::-webkit-scrollbar-track:vertical, body.blur dropdown > dropdown-content::-webkit-scrollbar-track:vertical {
				border-top-right-radius: 5px;
				border-bottom-right-radius: 5px;
			}
			::-webkit-scrollbar-thumb {
				background-color: #888;
				border: 4px solid transparent;
				background-clip: padding-box;
			}
			::-webkit-scrollbar-thumb:hover {
				background-color: #AAA;
				border: 4px solid transparent;
				background-clip: padding-box;
			}
			::-webkit-scrollbar-thumb:active {
				background-color: #555;
				border: 4px solid transparent;
				background-clip: padding-box;
			}
			body.blur::-webkit-scrollbar-thumb, body.blur ::-webkit-scrollbar-thumb {
				border-radius: 8px;
			}
		}
	}
	@layer features-before {
		@layer structured-container {
			/* top */
			@keyframes show-top {
				from {
					overflow: hidden;
				}
				to {
					overflow: hidden;
				}
			}
		}
		@layer constrained-container {
			/* post */
			post > sub-post > post-content :is(h1, h2, h3, h4, h5, h6, p, pre) {
				color: white;
			}
			body.blur post > sub-post > post-content :is(h1, h2, h3, h4, h5, h6, p, pre) {
				color: rgba(0, 0, 0, 0.5);
			}
		}
	}
	@layer features {
		@layer structured-container {
			/* top */
			top /* -> */ {
				overflow: hidden;
				position: fixed;
				margin: 0px -1px;
				border: 1px solid #e7e7e7;
				transition-property: margin-left, margin-right, max-height, width, left, right;
				transition-duration: 0.5s;
				background-color: #f3f3f3;
				max-height: 51px;
				width: 84%;
				top: 8px;
				left: 8%;
				right: 8%;
				z-index: 3; /* -> layer[top] */
			}
			body.blur top {
				border-radius: 5px;
				border: 0px;
				top: 9px;
				box-shadow: 0px 0px 32px rgba(0, 0, 0, 0.5);
			}
			top.small {
				left: 8px;
				right: 8px;
				margin-left: 0px;
				margin-right: 0px;
				width: calc(100% - 18px);
			}
			body.blur top.small {
				left: 9px;
				right: 9px;
			}
			top.medium {
				left: calc((100% - 1032px) / 2);
				right: calc((100% - 1032px) / 2);
				margin-left: 0px;
				margin-right: 0px;
				width: 1030px;
			}
			body.blur top.medium {
				left: calc((100% - 1032px) / 2 + 1px);
				right: calc((100% - 1032px) / 2 + 1px);
			}
			top.large {
				left: 8%;
				right: 8%;
				margin-left: -1px;
				margin-right: -1px;
				width: 84%;
			}
			body.blur top.large {
				margin-left: 0px;
				margin-right: 0px;
			}
			top:is(:hover, :focus-within) {
				max-height: calc(70% - 18px);
				overflow: auto;
				animation-name: show-top;
				animation-duration: 0.5s;
			}
			top > a /* -> */ {
				text-align: center;
				text-decoration: none;
				display: inline-block;
				padding: 14px 16px;
				transition-property: color, background-color;
				transition-duration: 0.2s;
				background-size: 0px;
				line-height: 23px;
				min-height: 23px;
				font-size: 16px;
				color: #666;
				cursor: default;
				user-select: none;
				-webkit-user-drag: none;
			}
			top > a.has-node {
				display: none;
			}
			top > a.icon {
				background-size: 31px;
				background-repeat: no-repeat;
				background-position: 10px 10px;
				padding-left: 49px;
			}
			top:is(:hover, :focus-within) > a.icon {
				background-position: 10px center;
			}
			top > a.icon.no-content {
				padding: 14px;
				width: 23px;
				height: 23px;
			}
			top > a:hover {
				background-color: rgba(221, 221, 221, 0.7);
			}
			top > a:focus-visible {
				outline: 2px solid darkorange;
				outline-offset: -2px;
			}
			body.blur top > a:focus-visible {
				border-radius: inherit;
			}
			top > a:hover:active {
				background-color: rgba(201, 201, 201, 0.7);
				color: white;
			}
			top > a.active {
				color: white;
				background-color: #4CAF50;
			}
			top > a.active:hover {
				background-color: #cfcfcf;
			}
			top > a.active:hover:active {
				background-color: #b8b8b8;
			}
			/* major */
			major /* -> */ {
				text-align: center;
				min-width: 1048px;
				width: 100%;
				padding: 25px 0px 75px 0px;
			}
			major.tiny {
				min-width: 570px;
				padding: 12px 0px 18px 0px;
			}
			top + major, top + major.tiny {
				padding-top: 69px;
			}
			major > sub-major /* -> */ {
				display: inline-block;
				width: 848px;
			}
			major.tiny > sub-major {
				max-width: 848px;
				width: calc(100% - 70px);
			}
			/* post */
			post /* -> */ {
				padding: 4px 0px;
			}
			major.tiny > sub-major post {
				padding: 3px 0px;
			}
			body.blur post {
				border-radius: 8px;
			}
			body.blur major.tiny > sub-major post {
				border-radius: 6px;
			}
			post > post-icon /* -> */ {
				position: relative;
				margin: 0px 0px -64px 0px;
				background-size: cover;
				width: 64px;
				aspect-ratio: 1;
				top: 8px;
				left: -32px;
				user-select: none;
				-webkit-user-drag: none;
				z-index: 1; /* -> layer[post-icon] */
			}
			major.tiny > sub-major post > post-icon {
				width: 48px;
				margin: 0px 0px -48px 0px;
				top: 6px;
				left: -24px;
			}
			post:not([icon-src]) > post-icon {
				display: none;
			}
			post > sub-post /* -> */ {
				position: relative;
				display: flex;
				border: 1px solid transparent;
				flex-flow: column;
			}
			post > sub-post:before {
				content: '';
				position: absolute;
				width: 100%;
				height: 100%;
				background-color: rgba(0, 0, 0, 0.5);
				z-index: -1; /* -> layer[post-backdrop] */
			}
			post > sub-post:after {
				content: '';
				position: absolute;
				border: 1px solid rgba(247, 247, 247, 0.7);
				width: 100%;
				height: 100%;
				left: -1px;
				top: -1px;
				pointer-events: none;
			}
			post[icon-src] > post-icon + sub-post {
				min-height: 80px;
			}
			major.tiny > sub-major post[icon-src] > post-icon + sub-post {
				min-height: 60px;
			}
			body.blur post > sub-post {
				border-radius: inherit;
				border: 0px;
			}
			body.blur post > sub-post:before {
				border-radius: inherit;
				background-color: rgba(255, 255, 255, 0.3);
				box-shadow: 0px 0px 32px rgba(0, 0, 0, 0.5);
			}
			body.blur post > sub-post:after {
				border-radius: inherit;
				border: 0px;
				left: 0px;
				top: 0px;
			}
			body.blur post.non-blur > sub-post:before {
				background-color: rgba(239, 239, 239, 0.9);
			}
			post > sub-post > post-leader /* -> */ {
				display: flex;
				padding: 0px 0px 0px 20px;
				max-width: calc(100% - 20px);
				width: calc(100% - 20px);
			}
			major.tiny > sub-major post > sub-post > post-leader {
				padding: 0px 0px 0px 15px;
				max-width: calc(100% - 15px);
				width: calc(100% - 15px);
			}
			body.blur post > sub-post > post-leader {
				border-top-left-radius: inherit;
				border-top-right-radius: inherit;
			}
			post > sub-post > post-leader > post-leader-section /* -> */ {
				display: inline-flex;
				flex-grow: 1;
			}
			post > sub-post > post-leader > post-leader-section > post-leader-order /* -> */ {
				display: inline-block;
				padding: 20px 20px 27px 20px;
				line-height: 21px;
				min-height: 21px;
				max-width: 80px;
				font-size: 16px;
				color: white;
				overflow-wrap: break-word;
			}
			major.tiny > sub-major post > sub-post > post-leader > post-leader-section > post-leader-order {
				padding: 15px 15px 24px 15px;
			}
			body.blur post > sub-post > post-leader > post-leader-section > post-leader-order {
				color: rgba(0, 0, 0, 0.5);
			}
			post > sub-post > post-leader > post-leader-section > post-leader-title /* -> */ {
				display: inline-flex;
				padding: 20px 20px 27px 20px;
				line-height: 21px;
				min-height: 21px;
				font-size: 16px;
				color: white;
				flex-grow: 1;
			}
			major.tiny > sub-major post > sub-post > post-leader > post-leader-section > post-leader-title {
				padding: 15px 15px 24px 15px;
			}
			body.blur post > sub-post > post-leader > post-leader-section > post-leader-title {
				color: rgba(0, 0, 0, 0.5);
			}
			post > sub-post > post-leader > post-leader-advance /* -> */ {
				text-align: right;
				display: inline-block;
				padding: 13px 13px 13px 17px;
				min-height: 42px;
				max-width: calc(40% - 30px);
			}
			major.tiny > sub-major post > sub-post > post-leader > post-leader-advance {
				padding: 9px 9px 9px 12px;
				max-width: calc(40% - 21px);
			}
			post > sub-post > post-leader > post-leader-advance.no-content {
				padding: 13px 20px 13px 0px;
			}
			major.tiny > sub-major post > sub-post > post-leader > post-leader-advance.no-content {
				padding: 9px 15px 9px 0px;
			}
			body.blur post > sub-post > post-leader > post-leader-advance {
				border-top-right-radius: inherit;
			}
			post > sub-post > post-content /* -> */ {
				padding: 0px 40px 20px 40px;
				flex-grow: 1;
			}
			post > sub-post > post-content.no-content {
				padding: 0px;
				min-height: 8px;
			}
			major.tiny > sub-major post > sub-post > post-content {
				padding: 0px 30px 15px 30px;
			}
			major.tiny > sub-major post > sub-post > post-content.no-content {
				padding: 0px;
				min-height: 6px;
			}
			body.blur post > sub-post > post-content {
				border-bottom-left-radius: inherit;
				border-bottom-right-radius: inherit;
			}
			post > sub-post > scroll-into /* -> */ {
				position: relative;
				left: -8px;
				top: -70px;
			}
			body.blur post > sub-post > scroll-into {
				top: -69px;
			}
			/* dropdown */
			dropdown /* -> */ {
				position: relative;
				display: inline-block;
			}
			dropdown.has-disabled {
				pointer-events: none;
			}
			dropdown:not(.has-disabled):is(:hover, :focus-within) {
				z-index: 2; /* -> layer[dropdown] */
			}
			dropdown:not(.has-disabled):is(:hover, :focus-within) > :not(dropdown-content, inner-padding, outer-margin) {
				position: relative;
				z-index: 1; /* -> layer[dropdown] -> layer[dropdown-element] */
			}
			dropdown > inner-padding /* -> */ {
				display: none;
			}
			dropdown:not(.has-disabled):is(:hover, :focus-within) > inner-padding {
				display: block;
				padding: 3px 0px;
			}
			dropdown > outer-margin /* -> */ {
				display: none;
			}
			dropdown:not(.has-disabled):is(:hover, :focus-within) > outer-margin {
				display: block;
				margin: -6px 0px;
			}
			dropdown > dropdown-content /* -> */ {
				overflow: auto;
				position: fixed;
				display: none;
				padding: 8px 0px;
				transition-property: transform;
				transition-duration: 0.5s;
				background-color: rgb(40, 40, 40);
				min-height: 36px;
				min-width: 175px;
				box-shadow: 0 0 32px rgba(0, 0, 0, 0.5);
			}
			body.blur dropdown > dropdown-content {
				border-radius: 5px;
				background-color: white;
			}
			dropdown:not(.has-disabled):not(:is(:hover, :focus-within)) > dropdown-content:not([hidden]):first-of-type {
				pointer-events: none;
				display: block;
				transform: translateY(-6px);
				opacity: 0;
			}
			dropdown:not(.has-disabled):is(:hover, :focus-within) > dropdown-content:not([hidden]):first-of-type {
				display: block;
				transform: translateY(0px);
				opacity: 1;
			}
			dropdown.has-single-button {
				margin: 3px;
			}
			body.blur dropdown.has-single-button {
				border-radius: 8px;
			}
			body.blur dropdown:not(.has-disabled):is(:hover, :focus-within).has-single-button {
				border-bottom-left-radius: 0px;
				border-bottom-right-radius: 0px;
			}
			dropdown.has-single-button > button:first-of-type:last-of-type {
				margin: 0px;
			}
			dropdown > dropdown-content.no-content:after {
				content: '(Nothing)';
				position: relative;
				padding: 8px 0px;
				font-size: 14px;
				line-height: 20px;
				color: rgba(255, 255, 255, 0.5);
			}
			body.blur dropdown > dropdown-content.no-content:after {
				color: rgba(10, 10, 10, 0.5);
			}
			dropdown > dropdown-content > a /* -> */ {
				text-decoration: none;
				display: block;
				padding: 8px 55px;
				line-height: 20px;
				min-height: 20px;
				font-size: 14px;
				width: 150px;
				color: white;
				background-size: 24px;
				background-repeat: no-repeat;
				background-position: 16px center;
				cursor: default;
				user-select: none;
				-webkit-user-drag: none;
			}
			body.blur dropdown > dropdown-content > a {
				color: rgb(10, 10, 10);
			}
			dropdown > dropdown-content > a:focus-visible {
				outline: 2px solid darkorange;
				outline-offset: -2px;
			}
			dropdown > dropdown-content > a.has-node {
				display: none;
			}
			dropdown > dropdown-content > a:hover {
				background-color: rgb(57, 57, 57);
			}
			body.blur dropdown > dropdown-content > a:hover {
				background-color: rgb(238, 238, 238);
			}
			dropdown > dropdown-content > a:hover:active {
				background-color: rgb(80, 80, 80);
			}
			body.blur dropdown > dropdown-content > a:hover:active {
				background-color: rgb(211, 211, 211);
			}
			/* button */
			button /* -> */ {
				text-align: center;
				display: inline-block;
				margin: 3px;
				padding: 16px 32px;
				line-height: 21px;
				min-height: 53px;
				font-size: 16px;
				transition-property: color, background-color, box-shadow;
				transition-duration: 0.4s;
				background-size: 0px;
				background-color: #4CAF50;
				color: white;
				cursor: default;
				user-select: none;
				-webkit-user-drag: none;
			}
			button.no-content {
				width: 85px;
			}
			body.blur button {
				border-radius: 8px;
			}
			button.icon {
				background-size: 31px;
				background-repeat: no-repeat;
				background-position: 11px center;
				padding-left: 48px;
				padding-right: 24px;
			}
			button.icon.no-content {
				padding: 16px;
				width: 53px;
				height: 53px;
			}
			button:hover {
				color: black;
				background-color: rgba(231, 231, 231, 0.9);
			}
			button:focus-visible {
				outline: 2px solid darkorange;
				outline-offset: 0px;
			}
			body.blur button:hover {
				box-shadow: 0px 0px 32px rgba(0, 0, 0, 0.5);
			}
			button:hover:active {
				background-color: rgba(188, 188, 188, 0.9);
			}
			button.disabled {
				cursor: auto;
				color: rgba(255, 255, 255, 0.7098039215686275);
				background-color: rgba(76, 175, 80, 0.7098039215686275);
				pointer-events: none;
			}
			button.advance {
				padding: 10px 20px;
				font-size: 12px;
				line-height: 16px;
				min-height: 36px;
			}
			button.advance.no-content {
				width: 56px;
			}
			body.blur button.advance {
				border-radius: 5px;
			}
			button.advance.icon {
				background-size: 16px;
				background-repeat: no-repeat;
				background-position: 10px center;
				padding-left: 31px;
				padding-right: 15px;
			}
			button.advance.icon.no-content {
				padding: 10px;
				width: 36px;
				height: 36px;
			}
		}
		@layer constrained-container {
			/* post */
			post > sub-post > post-leader > post-leader-advance > :is(button.advance, dropdown.has-single-button) {
				display: inline-block;
				max-width: calc(100% - 6px);
			}
			post > sub-post > post-content > advance {
				display: none;
			}
		}
	}
	@layer features-after {
		@layer structured-container {
			/* major */
			major > sub-major:not(:first-of-type) {
				display: none;
			}
			/* post */
			post:first-of-type {
				padding-top: 0px;
			}
			post:last-of-type {
				padding-bottom: 0px;
			}
			post > post-icon:not(:first-of-type) {
				display: none;
			}
			post > sub-post:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-leader:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-leader > post-leader-section:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-leader > post-leader-section > post-leader-order:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-leader > post-leader-section > post-leader-title:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-leader > post-leader-advance:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-content:not(:first-of-type) {
				display: none;
			}
			post > sub-post > post-content:not(.has-only-post) > post:first-of-type {
				padding-top: 20px;
			}
			major.tiny > sub-major post > sub-post > post-content:not(.has-only-post) > post:first-of-type {
				padding-top: 15px;
			}
			post > sub-post > scroll-into:not(:first-of-type) {
				display: none;
			}
			/* dropdown */
			dropdown:hover > inner-padding:not(:first-of-type) {
				display: none;
			}
			dropdown:hover > outer-margin:not(:first-of-type) {
				display: none;
			}
		}
		@layer constrained-container {
			/* post */
			post > sub-post > post-leader > post-leader-advance > :not(button.advance, dropdown.has-single-button) {
				display: none;
			}
		}
	}
	@layer backdrop-before {
		@media (pointer: coarse), (pointer: none) {
			@keyframes show-backdrop {
				from {
					opacity: 0;
					display: block;
				}
				to {
					opacity: 1;
					display: block;
				}
			}
		}
	}
	@layer backdrop {
		/* background-image with 'basis-layer, backdrop-container > blurred-filter' */
		body basis-layer {
			position: fixed;
			width: 100%;
			height: 100%;
			top: 0px;
			left: 0px;
			z-index: -3; /* -> layer[basis-backdrop] */
		}
		body major > sub-major > post > sub-post > backdrop-container {
			position: absolute;
			width: 100%;
			height: 100%;
			z-index: -2; /* -> layer[container-backdrop] */
		}
		body.blur major > sub-major > post > sub-post > backdrop-container {
			background-color: black;
			clip-path: inset(0px round 8px);
		}
		body.blur major.tiny > sub-major > post > sub-post > backdrop-container {
			clip-path: inset(0px round 5px);
		}
		body major > sub-major > post > sub-post > backdrop-container > blurred-filter {
			position: fixed;
			width: calc(100% + 100px);
			height: calc(100% + 100px);
			top: -50px;
			left: -50px;
		}
		body.blur major > sub-major > post > sub-post > backdrop-container > blurred-filter {
			filter: blur(20px);
		}
		body basis-layer, body.blur major > sub-major > post > sub-post > backdrop-container > blurred-filter {
			background-repeat: no-repeat;
			background-position: center;
			background-size: cover;
			background-image: var(--background-image, url('lake.jpg'));
		}
		@media (pointer: coarse), (pointer: none) {
			body major > sub-major > post > sub-post {
				transition-property: background-color;
				transition-duration: 0.5s;
			}
			body major > sub-major > post > sub-post.suspended-backdrop:before {
				background-color: transparent;
			}
			body major > sub-major > post > sub-post.suspended-backdrop > backdrop-container {
				display: none;
			}
			body major > sub-major > post > sub-post:not(.suspended-backdrop) > backdrop-container {
				animation-name: show-backdrop;
				animation-duration: 0.5s;
			}
		}
	}
	@layer backdrop-after {
		/* background-image with 'basis-layer, backdrop-container > blurred-filter' */
		body basis-layer:not(:first-of-type) {
			display: none;
		}
		body.blur major > sub-major > post > sub-post > backdrop-container:not(:first-of-type) {
			display: none;
		}
		body.blur major > sub-major > post > sub-post > backdrop-container > blurred-filter:not(:first-of-type) {
			display: none;
		}
	}
	@layer extensions {
		/* icons */
		.air-play {
			background-image: url('icons8-air-play-64.png');
		}
		.browse-page {
			background-image: url('icons8-browse-page-64.png');
		}
		.download-from-cloud {
			background-image: url('icons8-download-from-cloud-64.png');
		}
		.external-link {
			background-image: url('icons8-external-link-64.png');
		}
		.music-record {
			background-image: url('icons8-music-record-64.png');
		}
		.play-property {
			background-image: url('icons8-play-property-64.png');
		}
		.share {
			background-image: url('icons8-share-64.png');
		}
		.tv-show {
			background-image: url('icons8-tv-show-64.png');
		}
	}
}